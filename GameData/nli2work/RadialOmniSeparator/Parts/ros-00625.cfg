// ros-00625.cfg v1.0.0.0
// Radial Omni Separator (ROS)
// created: 
// updated: 30 Sep 2022

// this file: CC BY-NC-SA 4.0 by zer0Kerbal

PART
{
	name = radialomniseparator-00625
	module = Part
	author = nohark and zer0Kerbal

	MODEL
	{
		model = nli2work/RadialOmniSeparator/Assets/radialSeparator
	}
	rescaleFactor = 0.45
	bulkheadProfiles = srf, size0

	node_stack_top = 0.0, 0.22, 0.0, 0.0 , 1.0, 0.0, 1, 1
	node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1, 1
	attachRules = 0,1,1,1,0

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple

	TechRequired = basicRocketry
	entryCost = 500
	cost = 50
	category = Coupling
	subcategory = 0
  
	title = #ROS-titl-0625 // Radial Separator Mini
	manufacturer = #PNP-Agency-titl
	description = #ROS-desc-0625
	tags = #autoLOC_501792 // decouple

	mass = 0.01
	explosionPotential = 0
	fuelCrossFeed = False
	
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	
	crashTolerance = 8
	breakingForce = 150
	breakingTorque = 150

	maxTemp = 2000

	stagingIcon = DECOUPLER_HOR
	stageOffset = 1
	childStageOffset = 1
	
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
		techRequired = fuelSystems
	}

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 10
		isOmniDecoupler = true
	}
	
	MODULE
	{
		name = ModuleCargoPart
		stackableQuantity = 4
		packedVolume = 96 // 0.09587 m3
	}

	DRAG_CUBE
	{
		cube = Default, 0.1007,0.7908,0.3919, 0.1007,0.7908,0.3919, 0.2503,0.948,0.1457, 0.2503,0.938,0.3388, 0.09447,0.7265,0.5955, 0.09447,0.7263,0.5708, 0,-0.03287,-3.27E-08, 0.5868,0.2827,0.5868
	}
	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}