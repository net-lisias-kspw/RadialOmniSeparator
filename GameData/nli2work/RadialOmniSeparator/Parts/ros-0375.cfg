// ros-0375.cfg v1.0.0.0
// Radial Omni Separator (ROS)
// created: 
// updated: 30 Sep 2022

// this file: CC BY-NC-SA 4.0 by zer0Kerbal

PART
{
	name = radialomniseparator-0375
    module = Part
    author = nohark and zer0Kerbal

	MODEL
    {
        model = nli2work/RadialOmniSeparator/Assets/radialSeparator
    }
    rescaleFactor = 3.0
    bulkheadProfiles = srf, size3

	node_stack_top = 0.0, 0.22, 0.0, 0.0 , 1.0, 0.0, 1, 1
    node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1, 1
	attachRules = 0,1,1,1,0

    fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
    sound_vent_large = decouple

    TechRequired = basicRocketry
    entryCost = 1500
    cost = 375
    category = Coupling
    subcategory = 0
 
    title = #ROS-titl-375 // Radial Separator Mini
    manufacturer = #PNP-Agency-titl
    description = #ROS-desc-375
	tags = #autoLOC_501792 // decouple
 
    mass = 0.09
    explosionPotential = 0
	fuelCrossFeed = False
    
    dragModelType = default
    maximum_drag = 0.2
    minimum_drag = 0.2
    angularDrag = 2
    
    crashTolerance = 8
	breakingForce = 150
	breakingTorque = 150
	maxTemp = 2000

    stagingIcon = DECOUPLER_HOR
	stageOffset = 1
	childStageOffset = 1
    
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
		techRequired = fuelSystems
	}

    MODULE
    {
        name = ModuleDecouple
        ejectionForce = 150
        isOmniDecoupler = true
    }
	
	MODULE
	{
		name = ModuleCargoPart
		stackableQuantity = 1
		packedVolume = 20709 // 20.70874 m3
	}

	DRAG_CUBE
	{
		cube = Default, 4.476,0.7908,2.048, 4.476,0.7908,2.048, 11.12,0.948,0.4087, 11.12,0.938,1.692, 4.199,0.7265,3.403, 4.199,0.7263,3.241, 0,-0.2191,-2.18E-07, 3.912,1.884,3.912
	}
    
    MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}